trigger:
- none

variables:
- name: webhook
  value: github__pahealy7__apim-configuation__pr
- name: check_context
  value: demo_pipeline
- name: check_description
  value: AzDO pipeline check - state.txt

resources:
  webhooks:
    - webhook: githubpr
      connection: github__pahealy7__apim-configuation__pr
      filters:
        - path: action
          value: opened
    - webhook: githubpr
      connection: github__pahealy7__apim-configuation__pr
      filters:
        - path: action
          value: reopened
    - webhook: githubpr
      connection: github__pahealy7__apim-configuation__pr
      filters:
        - path: action
          value: edited
  repositories:
    - repository: githubrepo
      type: github
      endpoint: phealy
      name: phealy/apim-configuration

pool:
  vmImage: ubuntu-latest

steps:
- checkout: githubrepo
  persistCredentials: true
- script: |
    set -euxo pipefail

    # We need to run this manually to establish the webhook, so just exit if we don't have a PR number.
    if [[ -z '${{ parameters.githubpr.number }}' ]]; then
      echo 'Not actually triggered from a PR, exiting.'
      exit 0
    fi

    # We can pull our Azure Pipelines PAT from the git config because we have
    # persistCredentials: true above
    GIT_REMOTE=$(git config --get remote.origin.url)
    GIT_AUTH=$(git config --get "http.${GIT_REMOTE}.extraheader")
    WEBHOOK_ACTION='${{ parameters.githubpr.action }}'

    # Switch to the hidden reference that is currently the head of the PR
    git fetch origin pull/${{ parameters.githubpr.number }}/head:pr
    git checkout pr
    git status

    # Just read the state from the file for testing
    STATE=$(cat state.txt)
    
    # Get my run URL
    PIPELINE_URL='$(System.TeamFoundationCollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)'
    
    # Post the state back to GitHub using our PAT
    ACCEPT="Accept: application/vnd.github.v3+json"
    STATUS_URL='${{ parameters.githubpr.pull_request.statuses_url }}'

    curl -H "${ACCEPT}" -H "${GIT_AUTH}" -X POST ${STATUS_URL} -d @- << EOF
    {
      "state": "${STATE}",
      "context": "demo_pipeline",
      "description": "AzDO pipeline status check",
      "target_url": "${PIPELINE_URL}"
    }
    EOF
  displayName: Post commit status
